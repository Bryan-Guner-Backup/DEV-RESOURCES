---
title: "Выбор контрольных точек"
description: "Большинство интернет-ресурсов не оптимизировано для просмотра на разных типах устройств. Изучив основы, вы узнаете, как обеспечить одинаково хорошую работу сайта на телефонах, планшетах, домашних компьютерах... в общем, на любых устройствах, у которых есть экран."
updated_on: 2014-09-12
key-takeaways:
  set-viewport:
    - "Чтобы контролировать масштабирование окна просмотра в браузере, используйте метатег viewport."
    - "Добавьте <code>width=device-width</code>, чтобы адаптировать ширину окна просмотра к экрану устройства."
    - "Вставьте <code>initial-scale=1</code>, чтобы обеспечить соотношение 1:1 между пикселями CSS и независимыми пикселями устройства."
    - "Чтобы страница была доступна, проверьте, не отключено ли пользовательское масштабирование."
  size-content-to-vp:
    - "Не используйте крупные элементы с фиксированной шириной."
    - "Для корректного отображения контента не ограничивайте его определенной шириной области просмотра."
    - "Используйте медиазапросы CSS, чтобы указать разные стили для больших и маленьких экранов."
  media-queries:
    - "Медиазапросы также позволяют выбрать стиль на основе характеристик устройства."
    - "Добавьте <code>min-width</code> вместо <code>min-device-width</code> для корректного отображения сайта на большинстве устройств."
    - "Чтобы не нарушать структуру макета, используйте элементы относительных размеров."
  choose-breakpoints:
    - "Создавайте контрольные точки на основе контента, а не для отдельных устройств, продуктов или брендов."
    - "Сначала разработайте дизайн для самого маленького мобильного устройства, а затем переходите к версиям для больших экранов."
    - "Ограничьте длину строк 70-80 символами."
notes:
  use-commas:
    - "Разделяйте атрибуты запятыми, чтобы устаревшие версии браузеров могли их правильно интерпретировать."
---
<p class="intro">
  Будьте осторожны при определении контрольных точек на основе классов устройств.  Если при установке этих точек вы будете ориентироваться на все доступные устройства, бренды или операционные системы, техническое обслуживание сайта станет практически невозможным. Лучше, если контент будет сам определять, как макет должен подстраиваться под контейнер.
</p>


{% include shared/toc.liquid %}

{% include shared/takeaway.liquid list=page.key-takeaways.choose-breakpoints %}

## Выбор главных контрольных точек: от меньшего к большему

Сначала разработайте дизайн контента для маленьких экранов, а затем увеличивайте его, пока не возникнет необходимость в контрольной точке.  Так вы оптимизируете контрольные точки на основе контента и используете их минимальное количество.

В качестве примера рассмотрим уже знакомый вам [прогноз погоды]({{site.fundamentals}}/layouts/rwd-fundamentals/index.html).
Сначала сделаем так, чтобы прогноз хорошо смотрелся на небольшом экране.

<figure>
  {% link_sample _code/weather-1.html %}
    <img src="imgs/weather-1.png" class="center" srcset="imgs/weather-1.png 1x, imgs/weather-1-2x.png 2x" alt="Просмотр прогноза погоды на небольшом экране.">
  {% endlink_sample %}
</figure>

Затем увеличим размер окна браузера, пока между элементами не появится слишком много пустого пространства. Теперь прогноз погоды выглядит не так красиво.  Вы можете выбрать любое значение, но 600 пикселей - это слишком много.

<figure>
  {% link_sample _code/weather-1.html %}
    <img src="imgs/weather-2.png" class="center" srcset="imgs/weather-2.png 1x, imgs/weather-2-2x.png 2x" alt="Просмотр прогноза погоды при увеличении ширины страницы.">
  {% endlink_sample %}
</figure>

Чтобы сделать 600 пикселей контрольной точкой, нужно создать две таблицы стилей: одну для меньших значений, другую для больших.

{% include_code src=_code/weather-2.html snippet=mqweather2 %}

В конце проведите рефакторинг CSS.  В этом примере мы поместили общие стили (шрифты, значки, цвета и базовое позиционирование) в weather.css.  Затем мы включили макет для маленьких экранов в weather-small.css, а для больших - в weather-large.css.

<figure>
  {% link_sample _code/weather-2.html %}
    <img src="imgs/weather-3.png" class="center" srcset="imgs/weather-3.png 1x, imgs/weather-3-2x.png 2x" alt="Preview of the weather forecast designed for a wider screen.">
  {% endlink_sample %}
</figure>

## Выбор второстепенных контрольных точек (если необходимо)

Отметив главными контрольными точками крупные изменения макета, внесите второстепенные корректировки.  Например, между главными контрольными точками можно установить отступы для элемента или увеличить размер шрифта, чтобы он смотрелся в макете более естественно.

Начнем с оптимизации макета для небольших экранов.  В данном случае мы увеличим шрифт для ширины области просмотра, превышающей 360 пикселей.  Теперь, когда места достаточно, мы можем расположить минимальную температуру на одной линии с максимальной, а не под ней.  Также немного увеличим значки погодных явлений.

{% include_code src=_code/weather-small.css snippet=mqsmallbpsm lang=css %}

<div class="mdl-grid">
  <div class="mdl-cell mdl-cell--6--col">
    <img src="imgs/weather-4-l.png" srcset="imgs/weather-4-l.png 1x, imgs/weather-4-l-2x.png 2x" alt="Before adding minor breakpoints.">
  </div>

  <div class="mdl-cell mdl-cell--6--col">
    <img src="imgs/weather-4-r.png" srcset="imgs/weather-4-r.png 1x, imgs/weather-4-r-2x.png 2x" alt="After adding minor breakpoints.">
  </div>
</div>

Этим же способом можно ограничить размер панели прогноза погоды для больших экранов, чтобы она не занимала всю доступную ширину.

{% include_code src=_code/weather-large.css snippet=mqsmallbplg lang=css %}

## Оптимизация текста для чтения

Согласно распространенной теории, самой удобной для чтония является колонка с длиной строки около 70-80 знаков (8-10 слов). Поэтому для всех текстовых блоков, ширина которых превышает 10 слов, следует установить контрольную точку.

<div class="mdl-grid">
  <div class="mdl-cell mdl-cell--6--col">
    <img src="imgs/reading-ph.png" srcset="imgs/reading-ph.png 1x, imgs/reading-ph-2x.png 2x" alt="Без второстепенных контрольных точек">
  </div>

  <div class="mdl-cell mdl-cell--6--col">
    <img src="imgs/reading-de.png" srcset="imgs/reading-de.png 1x, imgs/reading-de-2x.png 2x" alt="После добавления второстепенных контрольных точек">
  </div>
</div>

Рассмотрим подробнее приведенный выше пример записи в блоге.  На маленьком экране отлично помещаются строки длиной в 10 слов шрифтом Roboto с размером 1em, но для экранов большего размера необходимо установить контрольную точку. В этом случае для окна просмотра браузера размером больше 575 пикселей оптимальная ширина контента равна 550 пикселям.

{% include_code src=_code/reading.html snippet=mqreading lang=css %}

## Никогда не скрывайте контент полностью

Внимательно выбирайте информацию, которая будет показана или скрыта в зависимости от размера экрана.
Не убирайте контент только потому, что не можете разместить его на экране.  Потребности пользователей не зависят от его размера.  Например, если вы уберете из прогноза погоды информацию о содержании пыльцы в воздухе, это может стать серьезной проблемой для аллергиков, решающих, стоит ли сегодня выходить из дома.




